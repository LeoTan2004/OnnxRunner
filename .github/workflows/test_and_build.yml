name: build and packet

on: [push]
permissions: write-all

jobs:
  verify:
    name: Verify The Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the Requiremens
        run: |
          pip install -r requirements.txt
      - name: Test The Target
        run: |
          sh ./test.sh
  build:
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        include:
          - arch: armv7
            distro: ubuntu22.04
            python: 3.7
            run-dir: deploy
            target: onnx_profile.py
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Run On ${{ matrix.distro }} ${{ matrix.arch }}
        uses: uraimo/run-on-arch-action@v2.6.0
        with:
          githubToken: ${{ github.token }}
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          setup: |
            mkdir -p "${PWD}/artifacts"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
            --volume "${PWD}:/app"
          install: |
            set -x
            if command -v apt-get &> /dev/null; then
              echo "installing python & pip with apt-get..."
              apt-get update
              apt-get install -y --no-install-recommends python3 python3-pip python3-venv
            else
              echo "installing python & pip with apk..."
              apk update
              apk add python3 py3-pip
            fi
            pip install -r /app/requirements.txt pyinstaller
          shell: /bin/sh
          run: |
            cd /app
            sh ./build.sh
            cp "./dist" "/artifacts/${{matrix.target}}"
            ls -al "/artifacts/${{matrix.target}}"
      - name: Zip the Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Drone-${{ matrix.distro }}-${{ matrix.arch }}
          path: "${PWD}/artifacts"
